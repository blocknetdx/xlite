name: build-all

on:
  push:
    branches:
      - main
      - dev
    tags:
      - "v**"
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build_linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        if: github.event.pull_request.draft == false

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm install --no-audit
      - run: |
          npm run download-binaries-linux
          chmod +x bin/linux/xlite-daemon*
      - run: npm run build-native-linux
      
      - uses: actions/upload-artifact@v3
        with:
          name: artifacts-linux
          path: |
            dist-native/*.tar.gz
            dist-native/*.AppImage
            dist-native/*.deb
            dist-native/latest*.yml

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          name: Xlite ${{ github.ref_name}}
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
          generate_release_notes: true
          files: |
            dist-native/*.tar.gz
            dist-native/*.AppImage
            dist-native/*.deb
            dist-native/latest*.yml

  build_mac:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
        if: github.event.pull_request.draft == false

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
            python-version: '3.10'

      - run: npm install --no-audit
      - run: |
          npm run download-binaries-mac
          chmod +x bin/mac/xlite-daemon*
      - run: npm run build-native-mac

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts-mac
          path: |
            dist-native/*.dmg
            dist-native/*.dmg.blockmap
            dist-native/*.zip
            dist-native/latest*.yml

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          name: Xlite ${{ github.ref_name}}
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
          generate_release_notes: true
          files: |
            dist-native/*.dmg
            dist-native/*.dmg.blockmap
            dist-native/*.zip
            dist-native/latest*.yml

  build_win:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
        if: github.event.pull_request.draft == false

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm install --no-audit
      - run: npm run download-binaries-win
      - run: npm run build-native-win
      
      - uses: actions/upload-artifact@v3
        with:
          name: artifacts-win
          path: |
            dist-native/*.exe
            dist-native/*.exe.blockmap
            dist-native/*.zip
            dist-native/latest*.yml

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          name: Xlite ${{ github.ref_name}}
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
          generate_release_notes: true
          files: |
            dist-native/*.exe
            dist-native/*.exe.blockmap
            dist-native/*.zip
            dist-native/latest*.yml
