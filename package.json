{
  "name": "xlite",
  "version": "1.0.4",
  "description": "xlite",
  "private": true,
  "main": "./dist/server/index.js",
  "scripts": {
    "start": "electron .",
    "start-dev": "electron --remote-debugging-port=9222 .",
    "build": "npm run clear-build-directory && npm run copy-static-files && npm run scss && npm run js && npm run js-error",
    "watch": "npm run watch-static-files & npm run watch-scss & npm run watch-js",
    "test": "npm run test-main && npm run test-renderer",
    "test-headless-main": "xvfb-maybe electron-mocha --require @babel/register --color --no-sandbox ./tests/*-tests.js",
    "test-headless-renderer": "xvfb-maybe electron-mocha --require @babel/register --color --renderer --no-sandbox ./tests/*-rtests.js",
    "test-main": "electron-mocha --require @babel/register --color ./tests/*-tests.js",
    "test-renderer": "electron-mocha --require @babel/register --color --renderer ./tests/*-rtests.js",
    "js": "babel src/server -d dist/server --verbose && babel src/app -d dist/app --verbose && npm run js-app",
    "js-app": "webpack --config-name=mainjs",
    "js-error": "webpack --config-name=errorjs",
    "watch-js": "babel src/server -d dist/server --watch --verbose & babel src/app -d dist/app --watch --verbose & npm run watch-js-app",
    "watch-js-app": "webpack --config-name=mainjs --watch",
    "watch-js-error": "webpack --config-name=errorjs --watch",
    "scss": "node-sass --output-style expanded --source-map true --source-map-contents true --precision 6 src/scss/main.scss dist/static/css/main.css",
    "watch-scss": "nodemon -w src/scss -e scss -x \"npm run scss\"",
    "copy-static-files": "node ./build-scripts/copy-files.js",
    "watch-static-files": "nodemon -w src -i app/* -i scss/* -e html,css,scss,js,ttf,ico,jpg,png,svg -x \"npm run copy-static-files\"",
    "clear-build-directory": "node ./build-scripts/clear-build-dir.js",
    "build-native": "npm run build && node ./native-build-scripts/01-copy-files.js && cd temp && npm install --production && cd .. && electron-builder --dir",
    "build-native-win": "npm run build && node ./native-build-scripts/01-copy-files.js win && cd temp && npm install --no-audit --production && cd .. && electron-builder --dir --x64 --ia32 --win nsis zip --publish never",
    "build-native-mac": "npm run build && node ./native-build-scripts/01-copy-files.js mac && cd temp && npm install --no-audit --production && cd .. && electron-builder --dir --x64 --mac dir --publish never",
    "build-native-linux": "npm run build && node ./native-build-scripts/01-copy-files.js linux && cd temp && npm install --no-audit --production && cd .. && electron-builder --dir --x64 --linux appImage deb tar.gz --publish never",
    "build-native-linux2": "npm run build && node ./native-build-scripts/01-copy-files.js linux && cd temp && npm install --no-audit --production && cd .. && electron-builder --dir --x64 --linux appImage --publish never",
    
    "build-native-win-artifact": "npm run build && node ./native-build-scripts/01-copy-files.js win && cd temp && npm install --no-audit --production && cd .. && electron-builder --dir --x64 --ia32 --win zip --publish never",
    "build-native-mac-artifact": "npm run build && node ./native-build-scripts/01-copy-files.js mac && cd temp && npm install --no-audit --production && cd .. && electron-builder --dir --x64 --mac tar.gz --publish never -c.mac.identity=null",
    "build-native-linux-artifact": "npm run build && node ./native-build-scripts/01-copy-files.js linux && cd temp && npm install --no-audit --production && cd .. && electron-builder --dir --x64 --linux tar.gz --publish never",

    
    "publish-native-win": "cross-env NODE_ENV=production npm run download-binaries-win && npm run build && node ./native-build-scripts/01-copy-files.js win && cd temp && npm install --no-audit --production && cd .. && electron-builder --win --publish always",
    "publish-native-mac": "cross-env NODE_ENV=production npm run download-binaries-mac && npm run build && node ./native-build-scripts/01-copy-files.js mac && cd temp && npm install --no-audit --production && cd .. && electron-builder --publish always",
    "publish-native-linux": "cross-env NODE_ENV=production npm run download-binaries-linux && npm run build && node ./native-build-scripts/01-copy-files.js linux && cd temp && npm install --no-audit --production && cd .. && electron-builder --publish always",
    "pack-native": "cross-env NODE_ENV=production npm run build && node ./native-build-scripts/01-copy-files.js && cd temp && npm install --production && cd .. && electron-builder",
    "publish-native": "cross-env NODE_ENV=production npm run build && node ./native-build-scripts/01-copy-files.js && cd temp && npm install --production && cd .. && electron-builder --publish always",
    "download-binaries": "npm run download-binaries-win && npm run download-binaries-linux && npm run download-binaries-mac",
    "download-binaries-win": "node ./native-build-scripts/02-download-binaries.js win",
    "download-binaries-linux": "node ./native-build-scripts/02-download-binaries.js linux",
    "download-binaries-mac": "node ./native-build-scripts/02-download-binaries.js mac",
    "generate-docs": "jsdoc -r --destination docs ./src/app"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/blocknetdx/xlite.git"
  },
  "author": "Blocknet <shorn@blocknet.org>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/blocknetdx/xlite/issues"
  },
  "homepage": "https://github.com/blocknetdx/xlite#readme",
  "devDependencies": {
    "@babel/plugin-proposal-class-properties": "^7.13.0",
    "@babel/plugin-transform-modules-amd": "^7.13.0",
    "@babel/plugin-transform-modules-commonjs": "^7.13.0",
    "@babel/preset-env": "^7.13.0",
    "@babel/preset-react": "^7.13.13",
    "@babel/register": "^7.13.14",
    "babel-eslint": "^10.1.0",
    "babel-loader": "^8.2.2",
    "colors": "^1.4.0",
    "cross-env": "^7.0.3",
    "electron": "^13.1.2",
    "electron-builder": "22.13.1",
    "electron-mocha": "^9.1.0",
    "eslint": "^7.32.0",
    "eslint-plugin-react": "^7.24.0",
    "eslint-plugin-react-hooks": "^4.3.0",
    "extract-zip": "^2.0.1",
    "jsdoc": "^3.6.7",
    "mocha": "^9.1.1",
    "node-sass": "^9.0.0",
    "nodemon": "^2.0.12",
    "rmrf-promise": "^1.1.0",
    "should": "^13.2.3",
    "webpack": "^5.44.0",
    "webpack-cli": "^4.7.2",
    "xvfb-maybe": "^0.2.1"
  },
  "dependencies": {
    "@babel/cli": "^7.13.10",
    "@babel/core": "^7.13.14",
    "bootstrap": "^5.0.2",
    "dexie": "^3.1.1",
    "electron-context-menu": "^2.2.0",
    "electron-is-dev": "^1.2.0",
    "follow-redirects": "^1.15.2",
    "electron-updater": "^6.1.1",
    "fs-extra": "^10.0.0",
    "immutable": "^4.0.0-rc.15",
    "jquery": "^3.6.0",
    "lodash": "^4.17.21",
    "mathjs": "^10.4.1",
    "moment": "^2.29.1",
    "popper.js": "^1.16.1-lts",
    "prop-types": "^15.7.2",
    "qrcode": "^1.5.0",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-perfect-scrollbar": "^1.5.8",
    "react-redux": "^7.2.5",
    "redux": "^4.1.1",
    "superagent": "^7.0.0",
    "sweetalert2": "^11.1.6",
    "uuid": "^8.3.2",
    "winston": "^3.4.1"
  },
  "build": {
    "asarUnpack": [
      "**/bin/linux/xlite-daemon",
      "**/bin/mac/xlite-daemon",
      "**/bin/win/xlite-daemon.exe",
      "**/blockchain-configuration-files/**/*"
    ],
    "electronVersion": "10.1.5",
    "appId": "co.blocknet.xlite",
    "productName": "XLite",
    "artifactName": "XLite-${version}-${os}.${ext}",
    "copyright": "Copyright © 2020-2023 Blocknet",
    "directories": {
      "app": "temp",
      "output": "dist-native"
    },
    "win": {
      "artifactName": "XLite-${version}-${os}-${arch}.${ext}",
      "verifyUpdateCodeSignature": false,
      "target": [
        {
          "target": "zip",
          "arch": [
            "x64",
            "ia32"
          ]
        },
        {
          "target": "nsis",
          "arch": [
            "x64",
            "ia32"
          ]
        }
      ],
      "icon": "./src/static/images/favicon.ico",
      "publish": {
        "provider": "github",
        "releaseType": "draft"
      }
    },
    "mac": {
      "target": [
        "dmg",
        "zip"
      ],
      "category": "public.app-category.utilities",
      "icon": "./src/static/images/favicon.icns",
      "gatekeeperAssess": false,
      "publish": {
        "provider": "github",
        "releaseType": "draft"
      }
    },
    "linux": {
      "target": [
        {
          "target": "appImage",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "deb",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "tar.gz",
          "arch": [
            "x64"
          ]
        }
      ],
      "icon": "./src/static/images/linux/",
      "synopsis": "Copyright © 2020-2023 Blocknet",
      "description": "Copyright © 2020-2023 Blocknet",
      "category": "Utility",
      "desktop": {
        "Name": "XLite",
        "StartupWMClass": "xlite"
      },
      "publish": {
        "provider": "github",
        "releaseType": "draft"
      }
    }
  }
}
